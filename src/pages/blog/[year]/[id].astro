---
import type { CollectionEntry } from 'astro:content'
import { render } from 'astro:content'
import Layout from '../../../common/blog.astro'
import { getPosts } from '../../../common/config'

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const posts = await getPosts(({ id }) => {
    return id.includes('/')
  })

  return posts.map((post, i) => {
    const params = post.id.split('/')
    return {
      params: { year: params[0], id: params[1] },
      props: {
        post,
        prev: i > 0 ? posts[i - 1] : undefined,
        next: i < posts.length - 1 ? posts[i + 1] : undefined
      }
    }
  })
}

export interface Props {
  post: CollectionEntry<'blog'>
  prev: CollectionEntry<'blog'>
  next: CollectionEntry<'blog'>
}

// 2. When its time to render, you can get the entry directly from the prop
const { post, prev, next } = Astro.props

// @ts-ignore
const { Content, remarkPluginFrontmatter } = await render(post)
let fm = post.data
const rfm = remarkPluginFrontmatter as CollectionEntry<'blog'>['data']
if (rfm) {
  fm.minutesRead = rfm.minutesRead
  fm.extra = rfm.extra
}
---

<Layout {post} {prev} {next}>
  <Content />
</Layout>
