---
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
// import { Image } from 'astro:assets'
import { Icon } from 'astro-icon/components'
import Categories from '../components/categories.astro'
import Tags from '../components/tags.astro'

export interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props

const cat = await getEntry(post.data.categories[0])

const image =
  post.data.coverImage ||
  (post.data.images && post.data.images[0]) ||
  post.data.socialImage ||
  cat!.data.coverImage

let author = await getEntry('author', 'default')
if (post.data.author) {
  author = await getEntry(post.data.author)
}
---

<section>
  <div
    class='border-1 group relative h-full overflow-hidden rounded-lg border-rosely-a bg-rosely3 shadow-xl dark:border-rosely8 dark:bg-rosely0'
  >
    <a href={import.meta.env.BASE_URL + 'blog/' + post.id}>
      <img
        src={image.src}
        alt={post.data.title + ' featured image'}
        class='relative h-64 w-full overflow-hidden rounded-lg object-cover object-top group-hover:opacity-75'
      />
      <p itemprop='name' class='sr-only'>{post.data.title}</p>
    </a>
    <div class='p-4'>
      {post.data.categories && <Categories categories={post.data.categories} />}
      <a itemprop='url' href={import.meta.env.BASE_URL + 'blog/' + post.id}>
        <h1
          itemprop='name'
          class='title-font mt-2 text-xl font-bold text-rosely9 hover:text-rosely-c dark:text-rosely-b dark:hover:text-rosely5'
        >
          {post.data.title}
        </h1>
      </a>
      <div class='flex flex-wrap items-center'>
        {
          post.data.pubDate && (
            <span
              itemprop='datePublished'
              class='mr-3 inline-flex items-center border-r-2 border-rosely-a py-1 pr-3 text-xs leading-none text-rosely1 dark:border-rosely8 dark:text-rosely7'
            >
              <Icon class='mr-1 h-4 w-4' name='heroicons:calendar-days' />
              {post.data.pubDate.toLocaleDateString('en-AU', {
                dateStyle: 'long',
                timeZone: 'Australia/Sydney'
              })}
            </span>
          )
        }
        {
          post.data.minutesRead && (
            <span class='mr-3 inline-flex items-center border-r-2 border-rosely-a py-1 pr-3 text-xs leading-none text-rosely1 dark:border-rosely8 dark:text-rosely7'>
              <Icon class='mr-1 h-4 w-4' name='heroicons:clock' />
              {post.data.minutesRead}
            </span>
          )
        }
        <span
          itemprop='author'
          class='inline-flex items-center text-xs leading-none text-rosely1 dark:text-rosely7'
        >
          <Icon class='mr-1 h-4 w-4' name='heroicons:user-circle' />
          {author!.data.title}
        </span>
      </div>
      <p itemprop='abstract description' class='mt-3 text-sm italic text-rosely1 dark:text-rosely6'>
        {post.data.description}
      </p>
      <Tags tags={post.data.tags} />
    </div>
  </div>
</section>
