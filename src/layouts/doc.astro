---
import type { CollectionEntry } from 'astro:content'
import type { Sidebar } from '../config'
import { getCollection } from 'astro:content'
import Base from './base.astro'
import PageContent from '../components/pagecontent.astro'
import LeftSidebar from '../components/leftsidebar.astro'
import RightSidebar from '../components/rightsidebar.astro'
import NextPrev from '../components/nextprev.astro'
import * as CONFIG from '../config'
import type { MarkdownHeading } from 'astro'

type Props = {
  frontmatter: CollectionEntry<'bio'>['data']
  headings: MarkdownHeading[]
}

const { frontmatter, headings } = Astro.props
const currentPage = Astro.url.toString()
const currentFile = `src/content/${Astro.url.pathname
  .replace(import.meta.env.BASE_URL, '')
  .replace(/\/$/, '')}.md`
const githubEditUrl = `${CONFIG.GITHUB_EDIT_URL}/${currentFile}`

const allDocs = await getCollection('bio')
const docs = allDocs.sort((a, b) => a.data.weight - b.data.weight).filter((p) => !p.data.draft)
const sections = Array.from(new Set(docs.map((doc) => doc.data.section))) as string[]
let sidebar = {} as Sidebar
sections.forEach(
  (section) =>
    (sidebar[section] = docs
      .filter((doc) => doc.data.section == section)
      .map((doc) => ({ text: doc.data.title, link: 'bio/' + doc.id })))
)
let prev: CollectionEntry<'bio'> | undefined
let next: CollectionEntry<'bio'> | undefined
docs.forEach((doc, i) => {
  if (currentPage.search(doc.id) >= 0) {
    if (i > 0) {
      prev = docs[i - 1]
    }
    if (i < docs.length - 1) {
      next = docs[i + 1]
    }
  }
})
const basefm: CollectionEntry<'page'>['data'] = {
  // draft: frontmatter.draft,
  title: frontmatter.title,
  description: frontmatter.description
}
---

<Base frontmatter={basefm} schema='Article'>
  <main
    class='max-w-8xl relative mx-auto flex justify-center bg-white sm:px-2 lg:px-8 xl:px-12 dark:bg-slate-900'
  >
    <aside id='grid-left' class='grid-sidebar' title='Site Navigation'>
      <LeftSidebar currentPage={currentPage} sidebar={sidebar} />
    </aside>
    <div id='grid-main'>
      <PageContent frontmatter={frontmatter} headings={headings} githubEditUrl={githubEditUrl}>
        <section
          class='prose-headings:font-display prose prose-purple dark:prose-invert prose-headings:scroll-mt-28 prose-headings:font-normal prose-a:font-semibold prose-a:no-underline prose-a:shadow-[inset_0_-2px_0_0_var(--tw-prose-background,#fff),inset_0_calc(-1*(var(--tw-prose-underline-size,4px)+2px))_0_0_var(--tw-prose-underline,var(--color-purple-300))] prose-a:hover:[--tw-prose-underline-size:6px] prose-pre:rounded-xl prose-pre:bg-rosely1 prose-pre:shadow-lg prose-lead:text-rosely1 dark:text-rosely3 dark:prose-a:text-rosely-b dark:prose-a:shadow-[inset_0_calc(-1*var(--tw-prose-underline-size,2px))_0_0_var(--tw-prose-underline,var(--color-purple-800))] dark:prose-a:hover:[--tw-prose-underline-size:6px] dark:prose-pre:bg-slate-800/60 dark:prose-pre:shadow-none dark:prose-pre:ring-1 dark:prose-pre:ring-slate-300/10 dark:prose-hr:border-slate-800 dark:prose-lead:text-rosely7 lg:prose-headings:scroll-mt-[8.5rem] max-w-none dark:[--tw-prose-background:var(--color-gray-900)]'
        >
          <slot />
        </section>
        <NextPrev base={import.meta.env.BASE_URL + 'bio/'} prev={prev} next={next} />
      </PageContent>
    </div>
    <aside id='grid-right' class='grid-sidebar' title='Table of Contents'>
      <RightSidebar headings={headings} githubEditUrl={githubEditUrl} />
    </aside>
  </main>
</Base>
